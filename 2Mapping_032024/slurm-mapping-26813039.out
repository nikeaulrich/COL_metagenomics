Loading conda
Input ........................................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/assembly/ofav/megahit_assembly/ofav.contigs.fa
Output .......................................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/mapping/ofav/ofav.contigs-fixed.fsa

WHAT WAS THERE
===============================================
Total num contigs ............................: 926,997
Total num nucleotides ........................: 413,517,386

WHAT WAS ASKED
===============================================
Simplify deflines? ...........................: Yes
Add prefix to sequence names? ................: No
Minimum length of contigs to keep ............: 1,000
Max % gaps allowed ...........................: 100.00%
Max num gaps allowed .........................: 1,000,000
Exclude specific sequences? ..................: No
Keep specific sequences? .....................: No
Enforce sequence type? .......................: No

WHAT HAPPENED
===============================================
Contigs removed ..............................: 866,555 (93.48% of all)
Nucleotides removed ..........................: 302,992,062 (73.27% of all)
Nucleotides modified .........................: 0 (0.00000% of all)
Deflines simplified ..........................: True
Settings:
  Output files: "ofav_contigs.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ofav.contigs-fixed.fsa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 27631331
Using parameters --bmax 20723499 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 20723499 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.38157e+07 (target: 20723498)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (20723499) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 19060833 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 19060834 for bucket 1
Getting block 2 of 8
  Reserving size (20723499) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 13004639 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 13004640 for bucket 2
Getting block 3 of 8
  Reserving size (20723499) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 16896111 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 16896112 for bucket 3
Getting block 4 of 8
  Reserving size (20723499) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 9473894 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 9473895 for bucket 4
Getting block 5 of 8
  Reserving size (20723499) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 18826986 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 18826987 for bucket 5
Getting block 6 of 8
  Reserving size (20723499) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 9479615 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 9479616 for bucket 6
Getting block 7 of 8
  Reserving size (20723499) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 11496419 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 11496420 for bucket 7
Getting block 8 of 8
  Reserving size (20723499) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 12286820 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 12286821 for bucket 8
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 33591267
fchr[G]: 55441551
fchr[T]: 77262468
fchr[$]: 110525324
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 42909943 bytes to primary EBWT file: ofav_contigs.1.bt2.tmp
Wrote 27631336 bytes to secondary EBWT file: ofav_contigs.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 110525324
    bwtLen: 110525325
    sz: 27631331
    bwtSz: 27631332
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 6907833
    offsSz: 27631332
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 575653
    numLines: 575653
    ebwtTotLen: 36841792
    ebwtTotSz: 36841792
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:46
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 27631331
Using parameters --bmax 20723499 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 20723499 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.57893e+07 (target: 20723498)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (20723499) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 11954563 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 11954564 for bucket 1
Getting block 2 of 7
  Reserving size (20723499) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20401406 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:03
Returning block of 20401407 for bucket 2
Getting block 3 of 7
  Reserving size (20723499) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 13131374 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 13131375 for bucket 3
Getting block 4 of 7
  Reserving size (20723499) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 11753776 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 11753777 for bucket 4
Getting block 5 of 7
  Reserving size (20723499) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 20021344 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 20021345 for bucket 5
Getting block 6 of 7
  Reserving size (20723499) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18699726 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 18699727 for bucket 6
Getting block 7 of 7
  Reserving size (20723499) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 14563129 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 14563130 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 33591267
fchr[G]: 55441551
fchr[T]: 77262468
fchr[$]: 110525324
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 42909943 bytes to primary EBWT file: ofav_contigs.rev.1.bt2.tmp
Wrote 27631336 bytes to secondary EBWT file: ofav_contigs.rev.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 110525324
    bwtLen: 110525325
    sz: 27631331
    bwtSz: 27631332
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 6907833
    offsSz: 27631332
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 575653
    numLines: 575653
    ebwtTotLen: 36841792
    ebwtTotSz: 36841792
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:42
Renaming ofav_contigs.3.bt2.tmp to ofav_contigs.3.bt2
Renaming ofav_contigs.4.bt2.tmp to ofav_contigs.4.bt2
Renaming ofav_contigs.1.bt2.tmp to ofav_contigs.1.bt2
Renaming ofav_contigs.2.bt2.tmp to ofav_contigs.2.bt2
Renaming ofav_contigs.rev.1.bt2.tmp to ofav_contigs.rev.1.bt2
Renaming ofav_contigs.rev.2.bt2.tmp to ofav_contigs.rev.2.bt2
11194254 reads; of these:
  11194254 (100.00%) were paired; of these:
    2874837 (25.68%) aligned concordantly 0 times
    4619251 (41.26%) aligned concordantly exactly 1 time
    3700166 (33.05%) aligned concordantly >1 times
    ----
    2874837 pairs aligned concordantly 0 times; of these:
      203680 (7.08%) aligned discordantly 1 time
    ----
    2671157 pairs aligned 0 times concordantly or discordantly; of these:
      5342314 mates make up the pairs; of these:
        3747654 (70.15%) aligned 0 times
        653700 (12.24%) aligned exactly 1 time
        940960 (17.61%) aligned >1 times
83.26% overall alignment rate
Sorted BAM File ..............................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/mapping/ofav/032024_COL_SAN_T5_139_OFAV_S17.bam
BAM File Index ...............................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/mapping/ofav/032024_COL_SAN_T5_139_OFAV_S17.bam.bai
10893243 reads; of these:
  10893243 (100.00%) were paired; of these:
    2617996 (24.03%) aligned concordantly 0 times
    4509731 (41.40%) aligned concordantly exactly 1 time
    3765516 (34.57%) aligned concordantly >1 times
    ----
    2617996 pairs aligned concordantly 0 times; of these:
      150555 (5.75%) aligned discordantly 1 time
    ----
    2467441 pairs aligned 0 times concordantly or discordantly; of these:
      4934882 mates make up the pairs; of these:
        3654342 (74.05%) aligned 0 times
        561279 (11.37%) aligned exactly 1 time
        719261 (14.58%) aligned >1 times
83.23% overall alignment rate
Sorted BAM File ..............................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/mapping/ofav/032024_COL_SAN_T5_140_OFAV_S18.bam
BAM File Index ...............................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/mapping/ofav/032024_COL_SAN_T5_140_OFAV_S18.bam.bai
9555042 reads; of these:
  9555042 (100.00%) were paired; of these:
    2508017 (26.25%) aligned concordantly 0 times
    3931234 (41.14%) aligned concordantly exactly 1 time
    3115791 (32.61%) aligned concordantly >1 times
    ----
    2508017 pairs aligned concordantly 0 times; of these:
      166789 (6.65%) aligned discordantly 1 time
    ----
    2341228 pairs aligned 0 times concordantly or discordantly; of these:
      4682456 mates make up the pairs; of these:
        3371414 (72.00%) aligned 0 times
        550435 (11.76%) aligned exactly 1 time
        760607 (16.24%) aligned >1 times
82.36% overall alignment rate
Sorted BAM File ..............................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/mapping/ofav/032024_COL_SAN_T5_141_OFAV_S19.bam
BAM File Index ...............................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/mapping/ofav/032024_COL_SAN_T5_141_OFAV_S19.bam.bai
12308446 reads; of these:
  12308446 (100.00%) were paired; of these:
    3149383 (25.59%) aligned concordantly 0 times
    5102979 (41.46%) aligned concordantly exactly 1 time
    4056084 (32.95%) aligned concordantly >1 times
    ----
    3149383 pairs aligned concordantly 0 times; of these:
      178980 (5.68%) aligned discordantly 1 time
    ----
    2970403 pairs aligned 0 times concordantly or discordantly; of these:
      5940806 mates make up the pairs; of these:
        4470733 (75.25%) aligned 0 times
        636171 (10.71%) aligned exactly 1 time
        833902 (14.04%) aligned >1 times
81.84% overall alignment rate
Sorted BAM File ..............................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/mapping/ofav/032024_COL_SAN_T5_166_OFAV_S20.bam
BAM File Index ...............................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/mapping/ofav/032024_COL_SAN_T5_166_OFAV_S20.bam.bai
11276054 reads; of these:
  11276054 (100.00%) were paired; of these:
    2781041 (24.66%) aligned concordantly 0 times
    4668314 (41.40%) aligned concordantly exactly 1 time
    3826699 (33.94%) aligned concordantly >1 times
    ----
    2781041 pairs aligned concordantly 0 times; of these:
      159339 (5.73%) aligned discordantly 1 time
    ----
    2621702 pairs aligned 0 times concordantly or discordantly; of these:
      5243404 mates make up the pairs; of these:
        3912410 (74.62%) aligned 0 times
        580424 (11.07%) aligned exactly 1 time
        750570 (14.31%) aligned >1 times
82.65% overall alignment rate
Sorted BAM File ..............................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/mapping/ofav/032024_COL_SAN_T5_167_OFAV_S21.bam
BAM File Index ...............................: /work/pi_sarah_gignouxwolfsohn_uml_edu/nikea/COL/mapping/ofav/032024_COL_SAN_T5_167_OFAV_S21.bam.bai
Mapping success!
